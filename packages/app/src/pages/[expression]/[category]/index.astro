---
import BaseLayout from '../../../layouts/BaseLayout.astro';

import json from '../../../static/items.json';
import {
  filterCategorizedCollectionsByTime,
  sortCollections
} from '../../../helpers/collections';
import { CategoryDirectories } from '../../../components/Directories';
import {
  HOME_SINCE_BREADCRUMBS,
  HOME_UNTIL_BREADCRUMBS,
  appendBreadcrumbs
} from '../../../helpers/paths';

export async function getStaticPaths() {
  const { items, date } = json;
  const expressions = ['since', 'until'];
  const paths = [];

  for (const expression of expressions) {
    const categorized = filterCategorizedCollectionsByTime(
      items,
      new Date(date),
      expression
    );
    const isSince = expression === 'since';
    const baseBreadcrumbs = isSince
      ? HOME_SINCE_BREADCRUMBS
      : HOME_UNTIL_BREADCRUMBS;

    for (const item of categorized) {
      const { title, slug } = item;
      // There can be only one category here, so we access [0] right away.
      const filteredCategorized = categorized.filter((c) => c.slug === slug);
      filteredCategorized[0].collections = sortCollections(
        filteredCategorized[0].collections
      );

      paths.push({
        params: {
          expression,
          category: slug
        },
        props: {
          expression,
          breadcrumbs: appendBreadcrumbs(baseBreadcrumbs, {
            href: `/${slug}`,
            title
          }),
          title: isSince ? `Since ${title}...` : `Until ${title}...`,
          collections: filteredCategorized,
          date
        }
      });
    }
  }

  return paths;
}

const { title, expression, collections, breadcrumbs, date } = Astro.props;
---

<BaseLayout
  pages={breadcrumbs}
  {title}
  description={`The ${title} category page with ${expression} filter in imballinst's events tracker site.`}
>
  <CategoryDirectories
    updateDate={date}
    items={collections}
    {title}
    viewAllSlugPrefix={expression}
    numOfCards={0}
  />
</BaseLayout>
